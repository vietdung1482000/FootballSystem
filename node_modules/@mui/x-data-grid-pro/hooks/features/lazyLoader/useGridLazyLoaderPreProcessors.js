import _extends from "@babel/runtime/helpers/esm/extends";
import * as React from 'react';
import { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';
import { GridFeatureModeConstant } from '@mui/x-data-grid';
export const GRID_SKELETON_ROW_ROOT_ID = 'auto-generated-skeleton-row-root';

const getSkeletonRowId = index => `${GRID_SKELETON_ROW_ROOT_ID}-${index}`;

export const useGridLazyLoaderPreProcessors = (apiRef, props) => {
  var _props$experimentalFe;

  const {
    lazyLoading
  } = (_props$experimentalFe = props.experimentalFeatures) != null ? _props$experimentalFe : {};
  const addSkeletonRows = React.useCallback(groupingParams => {
    if (!lazyLoading || props.rowsLoadingMode !== GridFeatureModeConstant.server || !props.rowCount || groupingParams.ids.length >= props.rowCount) {
      return groupingParams;
    }

    const newRowsIds = [...groupingParams.ids];

    for (let i = 0; i < props.rowCount - groupingParams.ids.length; i += 1) {
      const skeletonId = getSkeletonRowId(i);
      newRowsIds.push(skeletonId);
    }

    return _extends({}, groupingParams, {
      ids: newRowsIds
    });
  }, [props.rowCount, props.rowsLoadingMode, lazyLoading]);
  useGridRegisterPipeProcessor(apiRef, 'hydrateRows', addSkeletonRows);
};